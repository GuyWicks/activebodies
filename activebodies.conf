##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 8080;

	# SSL configuration
	#
	#listen 443 ssl default_server;
	#listen [::]:443 ssl default_server;
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html/activebodies;
	#root /var/www/html/activebodies;
	#root /usr/local/var/www/activebodies;
	root /Users/guywicks/git/activebodies;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	ssi on;

	location /xxx {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}



#        root    /var/www;

        location = / {
		rewrite ^ /home redirect;
        }

        location / {
            	ssi 	on;
            	set 	$inc $request_uri;
            	if (!-f $request_filename) {
                	rewrite ^ /index.html last;
            	}
            	if (!-f $document_root$inc.html) {
                	return 403;
            	}
        }

	location /images {
		add_header guy images;
		try_files $uri = 404;
	}

	# Resize images
        location /resize {
		# Default sizes for a thumbnail
                set 		$width 	100;
                set 		$height 100;
                set 		$dimens "";

		# Extract the resize values and image name
                if ($uri ~* "^/resize_(?<width>\d+)x(?<height>\d+)/(?<image_path>.*)" ) {
                        set 		$demins "_$1x$2";
		}

		#add_header	x-width $width;
		#add_header	x-height $height;
		#add_header	x-image $image_path;
                
		# Or use the defaults and create a thumbnail
                if ($uri ~* "^/resize/(.*)" ) {
                        set $image_path $1;
                }
                set 	$image_uri image_resize/$image_path?width=$width&height=$height;

		#add_header x-image_uri 	$image_uri;
		#add_header x-guy 	wicks;
		#add_header x-filename 	$request_filename;
		#add_header X-Cache-Status 	$upstream_cache_status;

		# If the file exists (locally hosted - see alias directive above)
		# then forward proxy onto the /image_resize location
                if (!-f $request_filename) {
                        proxy_pass 	http://$server_addr:$server_port/$image_uri;
                        break;
                }

		# Cache the results
                proxy_store          /tmp/nginx/resize$demins/$image_path;
                proxy_store_access   user:rw  group:rw  all:r;
                proxy_temp_path      /tmp/images;
                proxy_set_header     Host $host;
        }

	# Worker URI to resize the image using the ngx_http_image_filer_module
        location /image_resize {
                #alias 			/var/www/html/activebodies/images;
		alias 			/Users/guywicks/git/activebodies/images;
                image_filter resize 	$arg_width $arg_height;
                image_filter crop 	$arg_width $arg_height;
                image_filter_jpeg_quality 75;
		image_filter_interlace 	on;
                allow 			127.0.0.0/8;
                deny 			all;
	}
}
